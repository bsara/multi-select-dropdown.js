{"version":3,"sources":["multi-select-dropdown-element.js"],"names":["root","factory","define","amd","exports","module","MultiSelectDropdownElement","this","MSDObservableArray","addEventListener","eventName","eventHandler","eventHandlerContext","handlerInfos","_events","handlerHashCode","MSDInternalUtils","getHashCode","handlerInfo","handler","contexts","indexOf","push","removeEventListener","contextIndex","splice","length","Object","keys","ret","Array","prototype","apply","arguments","_triggerEvent","_getEventArgs","call","pop","reverse","shift","removed","sort","unshift","args","concat","from","setTimeout","hasOwnProperty","handlerHashCodes","i","j","items","arrayLikeItem","bind","options","addOption","optionText","optionValue","$newOption","document","createElement","value","String","text","_$select","appendChild","_optionElements","_setupOption","removeOption","selectionQuery","_getOptionSelectionQuery","HTMLElement","$optionToRemove","querySelector","_cleanupOptionForRemoval","parentNode","removeChild","wasSuccessful","getAttribute","_updateSelectedPlaceholderOptionInnerText","clearOptions","slice","forEach","destroy","$option","_onClickOption","_optionElementsOnClickHandlers","optionElements","eventHandlers","_getAllCheckedOptionElementsLength","querySelectorAll","_updateSelectAllOption","_useSelectAll","_$selectAllOption","setAttribute","_$selectedPlaceholderOption","innerText","_optionTypeLabelPlural","checkedOptionElementsLength","_wasAllSelected","_placeholderText","_optionTypeLabelSingular","_onUpdateOptionElements","$parent","e","preventDefault","stopPropagation","isChecked","target","removeAttribute","_onClickSelectAllOption","element","selector","dataset","optionTypeLabelSingular","optionTypeLabel","optionTypeLabelPlural","placeholder","useSelectAll","classList","add","insertBefore","firstChild","selected","blur","selectedOptions","undefined","getElementSelector","$el","TypeError","tagName","id","className","str","chr","hash","charCodeAt","freeze","create","constructor"],"mappings":"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","file":"multi-select-dropdown-element.min.js","sourcesContent":["/*!\n * MultiSelectDropdown.js (0.0.1)\n *\n * Copyright (c) 2016 Brandon Sara (http://bsara.github.io)\n * Licensed under the CPOL-1.02 (https://github.com/bsara/multi-select-dropdown.js/blob/master/LICENSE.md)\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.MultiSelectDropdownElement = factory();\n  }\n}(this, function() {/** @private */\nvar MSDInternalUtils = {\n  /**\n   * @param  {HTMLElement} $el\n   * @return {String}\n   * @private\n   */\n  getElementSelector: function getElementSelector($el) {\n    if ($el == null || !($el instanceof HTMLElement)) {\n      throw new TypeError(\"$el cannot be `null` or `undefined` and must be an instance of `HTMLElement`!\");\n    }\n\n    var ret = $el.tagName;\n\n    if ($el.id != null) {\n      ret += ('#' + $el.id);\n    }\n    if ($el.className != null) {\n      ret += ('.' + $el.className);\n    }\n\n    return ret;\n  },\n\n\n  /**\n   * Implentation taken from http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\n   *\n   * @param  {String} str\n   * @return {Number}\n   * @private\n   */\n  getHashCode: function(str) {\n    var chr;\n    var hash = 0;\n\n    str = String(str);\n\n    if (str.length === 0) {\n      return hash;\n    }\n\n    for (var i = 0; i < str.length; i++) {\n      chr   = str.charCodeAt(i);\n      hash  = (((hash << 5) - hash) + chr);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return hash;\n  }\n};\n\n\nObject.freeze(MSDInternalUtils);/**\n * TODO: Add description\n *\n * @inherits {Array}\n * @constructor\n */\nfunction MSDObservableArray() {\n  var items = arguments;\n\n  if (!(this instanceof MSDObservableArray)) {\n    return new MSDObservableArray.apply(this, items);\n  }\n\n\n\n  /** @private @type {!Object} */ var _events;\n\n\n\n  /** @constructs MSDObservableArray */\n  ;(function() {\n    Array.call(this);\n\n\n    if (items != null) {\n      if (items.length === 1) {\n        var arrayLikeItem = Array.from(items[0]);\n        this.push.apply(this, (arrayLikeItem.length > 0) ? arrayLikeItem : items[0]);\n      } else {\n        this.push.apply(this, Array.from(items));\n      }\n    }\n\n\n    _events = {};\n\n\n    this.addEventListener    = addEventListener;\n    this.removeEventListener = removeEventListener;\n\n    this.push    = push;\n    this.pop     = pop;\n    this.reverse = reverse;\n    this.shift   = shift;\n    this.sort    = sort;\n    this.splice  = splice;\n    this.unshift = unshift;\n  }).bind(this)();\n\n\n\n\n  /**\n   * TODO: Add description\n   *\n   * @param {!String}   eventName             - Name of event to which given `eventHandler` will be attached.\n   * @param {!Function} eventHandler          - The function to be called when the event represented by `eventName` occurs.\n   * @param {Object}    [eventHandlerContext] - The context to be used when calling `eventHandler` (defaults to this object).\n   */\n  function addEventListener(eventName, eventHandler, eventHandlerContext) {\n    eventHandlerContext = (eventHandlerContext || this);\n\n\n    var handlerInfos = _events[eventName];\n\n    if (handlerInfos == null) {\n      handlerInfos = _events[eventName] = {};\n    }\n\n\n    var handlerHashCode = MSDInternalUtils.getHashCode(eventHandler);\n    var handlerInfo     = handlerInfos[handlerHashCode];\n\n    if (handlerInfo == null) {\n      handlerInfo = handlerInfos[handlerHashCode] = {\n        handler:  eventHandler,\n        contexts: []\n      };\n    }\n\n\n    if (~handlerInfo.contexts.indexOf(eventHandlerContext)) {\n      return;\n    }\n\n    handlerInfo.contexts.push(eventHandlerContext);\n  }\n\n\n  /**\n   * TODO: Add description\n   *\n   * @param {!String}   eventName             - Name of event from which given `eventHandler` will be detached.\n   * @param {!Function} [eventHandler]        - The handler function attached to the event represented by the given 'eventName'.\n   * @param {Object}    [eventHandlerContext] - The context used when calling `eventHandler` (defaults to this object).\n   */\n  function removeEventListener(eventName, eventHandler, eventHandlerContext) {\n    if (!(eventName in _events)) {\n      return;\n    }\n\n\n    var handlerInfos = _events[eventName];\n    if (eventHandler == null) {\n      delete _events[eventName];\n      return;\n    }\n\n\n    var handlerHashCode = MSDInternalUtils.getHashCode(eventHandler);\n    var handlerInfo     = handlerInfos[eventHandler];\n    if (eventHandlerContext == null) {\n      delete handlerInfos[handlerHashCode];\n      return;\n    }\n\n\n    var contextIndex = handlerInfo.contexts.indexOf(eventHandlerContext);\n    if (~contextIndex) {\n      handlerInfo.contexts.splice(contextIndex, 1);\n    }\n\n\n    if (handlerInfo.contexts.length === 0) {\n      delete handlerInfos[handlerHashCode];\n    }\n    if (Object.keys(handlerInfos).length === 0) {\n      delete _events[eventName];\n    }\n  }\n\n\n  /**\n   * @inheritDoc\n   * @fires MSDObservableArray#add\n   * @fires MSDObservableArray#update\n   */\n  function push() {\n    var ret = Array.prototype.push.apply(this, arguments);\n\n    _triggerEvent('add', _getEventArgs.call(this, arguments));\n    _triggerEvent('update', _getEventArgs.call(this, arguments));\n\n    return ret;\n  }\n\n\n  /**\n   * @inheritDoc\n   * @fires MSDObservableArray#remove\n   * @fires MSDObservableArray#update\n   */\n  function pop() {\n    var ret = Array.prototype.pop.apply(this, arguments);\n\n    _triggerEvent('remove', _getEventArgs.call(this, ret));\n    _triggerEvent('update', _getEventArgs.call(this, ret));\n\n    return ret;\n  }\n\n\n  /**\n   * @inheritDoc\n   * @fires MSDObservableArray#sort\n   * @fires MSDObservableArray#update\n   */\n  function reverse() {\n    var ret = Array.prototype.reverse.apply(this, arguments);\n\n    _triggerEvent('sort', _getEventArgs.call(this));\n    _triggerEvent('update', _getEventArgs.call(this));\n\n    return ret;\n  }\n\n\n  /**\n   * @inheritDoc\n   * @fires MSDObservableArray#remove\n   * @fires MSDObservableArray#update\n   */\n  function shift() {\n    var removed = this[0];\n\n    var ret = Array.prototype.shift.apply(this, arguments);\n\n    _triggerEvent('remove', _getEventArgs.call(this, removed));\n    _triggerEvent('update', _getEventArgs.call(this, removed));\n\n    return ret;\n  }\n\n\n  /**\n   * @inheritDoc\n   * @fires MSDObservableArray#sort\n   * @fires MSDObservableArray#update\n   */\n  function sort() {\n    var ret = Array.prototype.sort.apply(this, arguments);\n\n    _triggerEvent('sort', _getEventArgs.call(this, ret));\n    _triggerEvent('update', _getEventArgs.call(this, ret));\n\n    return ret;\n  }\n\n\n  /**\n   * @inheritDoc\n   * @fires MSDObservableArray#remove\n   * @fires MSDObservableArray#update\n   */\n  function splice() {\n    var ret = Array.prototype.splice.apply(this, arguments);\n\n    _triggerEvent('remove', _getEventArgs.call(this, ret));\n    _triggerEvent('update', _getEventArgs.call(this, ret));\n\n    return ret;\n  }\n\n\n  /**\n   * @inheritDoc\n   * @fires MSDObservableArray#add\n   * @fires MSDObservableArray#update\n   */\n  function unshift() {\n    var ret = Array.prototype.unshift.apply(this, arguments);\n\n    _triggerEvent('remove', _getEventArgs.call(this, arguments));\n    _triggerEvent('update', _getEventArgs.call(this, arguments));\n\n    return ret;\n  }\n\n\n\n  // region Private Functions\n\n  /** @private */\n  function _getEventArgs(args) {\n    var ret = [ this ];\n    return ((args == null) ? ret : ret.concat(Array.from(args)));\n  }\n\n\n  /** @private */\n  function _triggerEvent(eventName, args) {\n    setTimeout(function() {\n      if (!_events.hasOwnProperty(eventName)) {\n        return;\n      }\n\n      var handlerInfos     = _events[eventName];\n      var handlerHashCodes = Object.keys(handlerInfos);\n\n      for (var i = 0; i < handlerHashCodes.length; i++) {\n        var handlerInfo = handlerInfos[handlerHashCodes[i]];\n\n        for (var j = 0; j < handlerInfo.contexts.length; j++) {\n          handlerInfo.handler.apply(handlerInfo.contexts[j], args);\n        }\n      }\n    }, 0);\n  }\n\n  // endregion\n}\n\n\n\nMSDObservableArray.prototype             = Object.create(Array.prototype);\nMSDObservableArray.prototype.constructor = MSDObservableArray;/**\n * @typedef {Object} MultiSelectDropdownElementOptions\n * @property {String}      [selector]            - TODO: Add description\n * @property {HTMLElement} [element]             - TODO: Add description\n * @property {Boolean}     [useSelectAll = true] - TODO: Add description\n */\n\n\n\n/**\n * TODO: Add description\n *\n * @param {String|HTMLElement|MultiSelectDropdownElementOptions} options *\n * @constructor\n */\nfunction MultiSelectDropdownElement(options) {\n  if (!(this instanceof MultiSelectDropdownElement)) {\n    return new MultiSelectDropdownElement(options);\n  }\n\n\n\n  /** @private @type {!HTMLElement} */ var _$select;\n  /** @private @type {!HTMLElement} */ var _$selectAllOption;\n  /** @private @type {!HTMLElement} */ var _$selectedPlaceholderOption;\n\n  /** @private @type {!String}      */ var _placeholderText;\n  /** @private @type {!String}      */ var _optionTypeLabelSingular;\n  /** @private @type {!String}      */ var _optionTypeLabelPlural;\n\n  /** @private @type {!Boolean}     */ var _useSelectAll   = false;\n  /** @private @type {!Boolean}     */ var _wasAllSelected = false;\n\n  /** @private @type {!Object}      */ var _optionElementsOnClickHandlers;\n\n  /** @private @type {!MSDObservableArray<!HTMLElement>} */ var _optionElements;\n\n\n\n  /** @constructs MultiSelectDropdownElement */\n  ;(function _constructor() {\n    options = (options || {});\n\n    if (typeof options === 'string') {\n      _$select = document.querySelector(options);\n    } else if (options instanceof HTMLElement) {\n      _$select = options;\n    } else {\n      _$select = (options.element || document.querySelector(options.selector));\n    }\n\n    _optionTypeLabelSingular = (_$select.dataset.optionTypeLabelSingular || _$select.dataset.optionTypeLabel || \"Option\");\n    _optionTypeLabelPlural   = (_$select.dataset.optionTypeLabelPlural || (_optionTypeLabelSingular + \"s\"));\n    _placeholderText         = (_$select.dataset.placeholder || (\"0 \" + _optionTypeLabelPlural + \" Selected\"));\n\n    _optionElementsOnClickHandlers = {\n      optionElements: [],\n      eventHandlers:  []\n    };\n\n    _optionElements = new MSDObservableArray(_$select.querySelectorAll('option'));\n\n\n    if (options.useSelectAll === true) {\n      _useSelectAll = true;\n\n      _$selectAllOption = document.createElement('option');\n\n      _$selectAllOption.innerText = \"All\";\n      _$selectAllOption.classList.add('msd-select-all');\n      _$selectAllOption.addEventListener('click', _onClickSelectAllOption.bind(_$selectAllOption));\n\n      _updateSelectAllOption();\n\n      _$select.insertBefore(_$selectAllOption, _$select.firstChild);\n    }\n\n\n    _$selectedPlaceholderOption = document.createElement('option');\n\n    _$selectedPlaceholderOption.selected = true;\n    _$selectedPlaceholderOption.classList.add('msd-placeholder');\n\n    _updateSelectedPlaceholderOptionInnerText();\n\n    _$select.insertBefore(_$selectedPlaceholderOption, _$select.firstChild);\n\n\n    for (var i = 0; i < _optionElements.length; i++) {\n      var $option = _optionElements[i];\n      _setupOption($option);\n    }\n\n\n    _$selectedPlaceholderOption.addEventListener('click', function(e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _$select.blur();\n    });\n\n\n\n    _$select.addEventListener('change', function(e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      for (var i = 0; i < _$select.selectedOptions.length; i++) {\n        _$select.selectedOptions[i].selected = false;\n      }\n\n      _$select.value = undefined;\n    });\n\n\n    _$select.addEventListener('focus', function(e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _$select.setAttribute('multiple', 'multiple');\n      _$selectedPlaceholderOption.selected = false;\n    });\n\n\n\n    _$select.addEventListener('blur', function(e) {\n      _$selectedPlaceholderOption.selected = true;\n      _$select.removeAttribute('multiple');\n    });\n\n\n    _optionElements.addEventListener('update', _onUpdateOptionElements);\n\n\n\n    this.addOption    = addOption;\n    this.removeOption = removeOption;\n    this.clearOptions = clearOptions;\n    this.destroy      = destroy;\n  }.bind(this))();\n\n\n\n  /**\n   * TODO: Implement\n   *\n   * @param {*} optionText\n   * @param {*} [optionValue]\n   */\n  function addOption(optionText, optionValue) {\n    var $newOption = document.createElement('option');\n\n    if (optionValue != null && optionValue !== \"\") {\n      $newOption.value = String(optionValue);\n    }\n\n    $newOption.text = String(optionText);\n\n    _$select.appendChild($newOption);\n    _optionElements.push($newOption);\n\n    _setupOption($newOption);\n  }\n\n\n  /**\n   * TODO: Implement\n   *\n   * @param {String|Number|Date|HTMLElement} optionValue\n   * @returns {Boolean} `true` if the option was removed successfully or\n   *                    if it was not found; otherwise, returns `false`.\n   */\n  function removeOption(optionValue) {\n    var selectionQuery  = _getOptionSelectionQuery((optionValue instanceof HTMLElement) ? optionValue.value : optionValue);\n    var $optionToRemove = _$select.querySelector(selectionQuery);\n\n    if ($optionToRemove != null) {\n      _cleanupOptionForRemoval($optionToRemove);\n\n      $optionToRemove.parentNode.removeChild($optionToRemove);\n\n      var wasSuccessful = (_$select.querySelector(selectionQuery) == null);\n\n      if (wasSuccessful) {\n        _optionElements.splice(_optionElements.indexOf($optionToRemove), 1);\n\n        if ($optionToRemove.getAttribute('checked') != null) {\n          _updateSelectedPlaceholderOptionInnerText();\n        }\n      }\n\n      return wasSuccessful;\n    }\n\n    return true;\n  }\n\n\n  /**\n   * TODO: Implement\n   */\n  function clearOptions() {\n    _optionElements.slice(0, _optionElements.length).forEach(this.removeOption);\n  }\n\n\n  /**\n   * TODO: Implement\n   *\n   * @public\n   */\n  function destroy() {\n    // TODO: Implement\n  }\n\n\n\n  // region Private Functions\n\n  /** @private */\n  function _setupOption($option) {\n    var eventHandler = _onClickOption.bind($option);\n\n    $option.addEventListener('click', eventHandler);\n\n    _optionElementsOnClickHandlers.optionElements.push($option);\n    _optionElementsOnClickHandlers.eventHandlers.push(eventHandler);\n  }\n\n\n  /** @private */\n  function _cleanupOptionForRemoval($option) {\n    var eventHandler = _optionElementsOnClickHandlers.eventHandlers[_optionElementsOnClickHandlers.optionElements.indexOf($option)];\n    $option.removeEventListener('click', eventHandler);\n  }\n\n\n  /** @private */\n  function _getOptionSelectionQuery(optionValue) {\n    return ((optionValue == null) ? 'option:not([value])' : ('option[value=\"' + String(optionValue) + '\"]'));\n  }\n\n\n\n  /** @private */\n  function _getAllCheckedOptionElementsLength() {\n    return _$select.querySelectorAll('option:not(.msd-select-all)[checked]').length;\n  }\n\n\n  /** @private */\n  function _updateSelectAllOption() {\n    if (_useSelectAll) {\n      if (_getAllCheckedOptionElementsLength() === _optionElements.length) {\n        _$selectAllOption.setAttribute('checked', 'checked');\n      }\n    }\n  }\n\n\n  /** @private */\n  function _updateSelectedPlaceholderOptionInnerText() {\n    if (_useSelectAll && _$selectAllOption.getAttribute('checked') != null) {\n      _$selectedPlaceholderOption.innerText = \"All \" + _optionTypeLabelPlural + \" Selected\";\n      return;\n    }\n\n    var checkedOptionElementsLength = (_wasAllSelected ? 0 : _getAllCheckedOptionElementsLength());\n\n    if (checkedOptionElementsLength === 0) {\n      _$selectedPlaceholderOption.innerText = _placeholderText;\n      return;\n    }\n    _$selectedPlaceholderOption.innerText = (checkedOptionElementsLength + \" \" + (checkedOptionElementsLength === 1 ? _optionTypeLabelSingular : _optionTypeLabelPlural) + \" Selected\");\n  }\n\n\n  // region Event Handlers\n\n  /** @private */\n  function _onUpdateOptionElements(optionElements) {\n    optionElements.forEach(function($option) {\n      var $parent = $option.parentNode;\n\n      $parent.removeChild($option);\n      $parent.appendChild($option);\n    });\n  }\n\n\n  /** @private */\n  function _onClickOption(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    var isChecked = (this.getAttribute('checked') == null);\n\n    if (e.target === _$selectAllOption) {\n      _wasAllSelected = !isChecked;\n    }\n\n    if (this.getAttribute('checked') == null) {\n      this.setAttribute('checked', 'checked');\n    } else {\n      this.removeAttribute('checked');\n    }\n\n    if (e.target !== _$selectAllOption) {\n      _updateSelectAllOption();\n    }\n    _updateSelectedPlaceholderOptionInnerText();\n  }\n\n\n  /** @private */\n  function _onClickSelectAllOption() {\n    if (_$selectAllOption.getAttribute('checked') == null) {\n      this.removeAttribute('checked');\n      return;\n    }\n    this.setAttribute('checked', 'checked');\n  }\n\n  // endregion\n\n  // endregion\n}\n\nreturn MultiSelectDropdownElement;\n\n}));\n"]}