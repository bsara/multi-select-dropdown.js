{"version":3,"sources":["multi-select-dropdown.js"],"names":["root","factory","define","amd","exports","module","MultiSelectDropdown","this","MultiSelectDropdownElement","options","_getAllCheckedOptionElementsLength","_$select","querySelectorAll","length","_updateSelectAllOption","_useSelectAll","_optionElements","_$selectAllOption","setAttribute","_updateSelectedPlaceholderOptionInnerText","getAttribute","_$selectedPlaceholderOption","innerText","_optionTypeLabelPlural","checkedOptionElementsLength","_wasAllSelected","_placeholderText","_optionTypeLabelSingular","_onClickOption","e","preventDefault","stopPropagation","isChecked","target","removeAttribute","_onClickSelectAllOption","element","document","querySelector","selector","dataset","optionTypeLabelSingular","optionTypeLabel","optionTypeLabelPlural","placeholder","useSelectAll","createElement","classList","add","addEventListener","bind","insertBefore","firstChild","selected","i","$option","blur","selectedOptions","value","undefined","MultiSelectDropdownManager","init","$select","HTMLElement","_addSelectElement","ret","msdSelectElements","Array","splice","String","push","reload","$el","MSDInternalUtils","getElementSelector","Object","hasOwnProperty","_elements","msdElement","TypeError","tagName","id","className","freeze"],"mappings":"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","file":"multi-select-dropdown.min.js","sourcesContent":["/*!\n * MultiSelectDropdown.js (0.0.0)\n *\n * Copyright (c) 2015 Brandon Sara (http://bsara.github.io)\n * Licensed under the CPOL-1.02 (https://github.com/bsara/multi-select-dropdown.js/blob/master/LICENSE.md)\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.MultiSelectDropdown = factory();\n  }\n}(this, function() {/** @private */\nvar MSDInternalUtils = {\n  /**\n   * @param  {HTMLElement} $el\n   * @return {String}\n   * @private\n   */\n  getElementSelector: function getElementSelector($el) {\n    if ($el == null || !($el instanceof HTMLElement)) {\n      throw new TypeError(\"$el cannot be `null` or `undefined` and must be an instance of `HTMLElement`!\");\n    }\n\n    var ret = $el.tagName;\n\n    if ($el.id != null) {\n      ret += ('#' + $el.id);\n    }\n    if ($el.className != null) {\n      ret += ('.' + $el.className);\n    }\n\n    return ret;\n  }\n};\n\n\nObject.freeze(MSDInternalUtils);/**\n * TODO: Add description\n *\n * @param {Object} options -\n *   - {String}      [selector]            - TODO: Add description\n *   - {HTMLElement} [element]             - TODO: Add description\n *   - {Boolean}     [useSelectAll = true] - TODO: Add description\n *\n * @constructor\n */\nfunction MultiSelectDropdownElement(options) {\n  if (!(this instanceof MultiSelectDropdownElement)) {\n    return new MultiSelectDropdownElement(options);\n  }\n\n\n\n  /** @private @type {!HTMLElement}   */ var _$select;\n  /** @private @type {!HTMLElement}   */ var _$selectAllOption;\n  /** @private @type {!HTMLElement}   */ var _$selectedPlaceholderOption;\n\n  /** @private @type {!String}        */ var _placeholderText;\n  /** @private @type {!String}        */ var _optionTypeLabelSingular;\n  /** @private @type {!String}        */ var _optionTypeLabelPlural;\n\n  /** @private @type {!HTMLElement[]} */ var _optionElements;\n\n  /** @private @type {!Boolean}       */ var _useSelectAll   = false;\n  /** @private @type {!Boolean}       */ var _wasAllSelected = false;\n\n\n\n  /** @constructor */\n  ;(function _constructor() {\n    options = (options || {});\n\n    _$select = (options.element || document.querySelector(options.selector));\n\n    _optionTypeLabelSingular = (_$select.dataset.optionTypeLabelSingular || _$select.dataset.optionTypeLabel || \"Option\");\n    _optionTypeLabelPlural   = (_$select.dataset.optionTypeLabelPlural || (_optionTypeLabelSingular + \"s\"));\n    _placeholderText         = (_$select.dataset.placeholder || (\"0 \" + _optionTypeLabelPlural + \" Selected\"));\n\n    _optionElements = _$select.querySelectorAll('option');\n\n\n    if (options.useSelectAll === true) {\n      _useSelectAll = true;\n\n      _$selectAllOption = document.createElement('option');\n\n      _$selectAllOption.innerText = \"All\";\n      _$selectAllOption.classList.add('msd-select-all');\n      _$selectAllOption.addEventListener('click', _onClickOption.bind(_$selectAllOption));\n\n      _updateSelectAllOption();\n\n      _$select.insertBefore(_$selectAllOption, _$select.firstChild);\n    }\n\n\n    _$selectedPlaceholderOption = document.createElement('option');\n\n    _$selectedPlaceholderOption.selected = true;\n    _$selectedPlaceholderOption.classList.add('msd-placeholder');\n\n    _updateSelectedPlaceholderOptionInnerText();\n\n    _$select.insertBefore(_$selectedPlaceholderOption, _$select.firstChild);\n\n\n    for (var i = 0; i < _optionElements.length; i++) {\n      var $option = _optionElements[i];\n\n      $option.addEventListener('click', _onClickOption.bind($option));\n      _$selectAllOption.addEventListener('click', _onClickSelectAllOption.bind($option));\n    }\n\n\n    _$selectedPlaceholderOption.addEventListener('click', function(e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _$select.blur();\n    });\n\n\n\n    _$select.addEventListener('change', function(e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      for (var i = 0; i < _$select.selectedOptions.length; i++) {\n        _$select.selectedOptions[i].selected = false;\n      }\n\n      _$select.value = undefined;\n    });\n\n\n    _$select.addEventListener('focus', function(e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _$select.setAttribute('multiple', 'multiple');\n      _$selectedPlaceholderOption.selected = false;\n    });\n\n\n\n    _$select.addEventListener('blur', function(e) {\n      _$selectedPlaceholderOption.selected = true;\n      _$select.removeAttribute('multiple');\n    });\n  }.bind(this))();\n\n\n\n  /**\n   * TODO: Implement\n   *\n   * @public\n   */\n  function destroy() {\n    // TODO: Implement\n  }\n\n\n\n  /** @private */\n  function _getAllCheckedOptionElementsLength() {\n    return _$select.querySelectorAll('option:not(.msd-select-all)[checked]').length;\n  }\n\n\n  /** @private */\n  function _updateSelectAllOption() {\n    if (_useSelectAll) {\n      if (_getAllCheckedOptionElementsLength() === _optionElements.length) {\n        _$selectAllOption.setAttribute('checked', 'checked');\n      }\n    }\n  }\n\n\n  /** @private */\n  function _updateSelectedPlaceholderOptionInnerText() {\n    if (_useSelectAll && _$selectAllOption.getAttribute('checked') != null) {\n      _$selectedPlaceholderOption.innerText = \"All \" + _optionTypeLabelPlural + \" Selected\";\n      return;\n    }\n\n    var checkedOptionElementsLength = (_wasAllSelected ? 0 : _getAllCheckedOptionElementsLength());\n\n    if (checkedOptionElementsLength === 0) {\n      _$selectedPlaceholderOption.innerText = _placeholderText;\n      return;\n    }\n    _$selectedPlaceholderOption.innerText = (checkedOptionElementsLength + \" \" + (checkedOptionElementsLength === 1 ? _optionTypeLabelSingular : _optionTypeLabelPlural) + \" Selected\");\n  }\n\n\n  // region Event Handlers\n\n  /** @private */\n  function _onClickOption(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    var isChecked = (this.getAttribute('checked') == null);\n\n    if (e.target === _$selectAllOption) {\n      _wasAllSelected = !isChecked;\n    }\n\n    if (this.getAttribute('checked') == null) {\n      this.setAttribute('checked', 'checked');\n    } else {\n      this.removeAttribute('checked');\n    }\n\n    if (e.target !== _$selectAllOption) {\n      _updateSelectAllOption();\n    }\n    _updateSelectedPlaceholderOptionInnerText();\n  }\n\n\n  /** @private */\n  function _onClickSelectAllOption() {\n    if (_$selectAllOption.getAttribute('checked') == null) {\n      this.removeAttribute('checked');\n      return;\n    }\n    this.setAttribute('checked', 'checked');\n  }\n\n  // endregion\n}/**\n * TODO: Add description\n *\n * @constructor\n */\nfunction MultiSelectDropdownManager() {\n  if (!(this instanceof MultiSelectDropdownManager)) {\n    return new MultiSelectDropdownManager();\n  }\n\n\n\n  /** @private @type {!Object} */ var _elements;\n\n\n\n  /** @constructor */\n  ;(function _constructor() {\n    _elements = {};\n\n\n    // region Public Functions\n\n    this.init   = init;\n    this.reload = reload;\n\n    // endregion\n  }.bind(this))();\n\n\n\n  /**\n   * TODO : Add description\n   *\n   * @param {HTMLElement|HTMLElement[]|String} [$select] - TODO: Add description\n   * @returns {MultiSelectDropdownElement|MultiSelectDropdownElement[]} TODO: Add description\n   *\n   * @public\n   */\n  function init($select) {\n    if ($select instanceof HTMLElement) {\n      return _addSelectElement($select);\n    }\n\n    var ret               = [];\n    var msdSelectElements = (($select instanceof Array) ? $select.splice() : document.querySelectorAll(($select instanceof String) ? $select : 'select.msd'));\n\n    for (var i = 0; i < msdSelectElements.length; i++) {\n      ret.push(_addSelectElement(msdSelectElements[i]));\n    }\n\n    return ret;\n  }\n\n\n  /**\n   * TODO : Add description\n   *\n   * @param {HTMLElement|HTMLElement[]|String} [$select] - TODO: Add description\n   * @returns {MultiSelectDropdownElement|MultiSelectDropdownElement[]} TODO: Add description\n   *\n   * @public\n   */\n  function reload($el) {\n    // TODO: Implement\n  }\n\n\n  /**\n   * @param {HTMLElement} $select\n   * @returns {HTMLElement}\n   * @private\n   */\n  function _addSelectElement($select) {\n    var selector = MSDInternalUtils.getElementSelector($select);\n\n    if (!Object.hasOwnProperty(_elements, selector)) {\n      _elements[selector] = [];\n    }\n\n    var msdElement = new MultiSelectDropdownElement({ element: $select });\n    _elements[selector].push(msdElement);\n\n    return msdElement;\n  }\n}\n\nreturn {\n  MultiSelectDropdownManager: MultiSelectDropdownManager,\n  MultiSelectDropdownElement: MultiSelectDropdownElement,\n};\n\n}));\n"]}