{"version":3,"sources":["multi-select-dropdown.js"],"names":["root","factory","define","amd","exports","module","MultiSelectDropdown","this","MSDObservableArray","attachEvent","eventName","eventHandler","eventHandlerContext","handlers","_events","contexts","contextIndex","indexOf","push","detachEvent","splice","length","Object","keys","ret","Array","prototype","apply","arguments","_triggerEvent","_getEventArgs","pop","reverse","shift","removed","sort","unshift","args","concat","from","setTimeout","hasOwnProperty","handler","i","ctorArgs","bind","MultiSelectDropdownElement","options","addOption","optionText","optionValue","$newOption","document","createElement","value","String","text","_optionElements","removeOption","selectionQuery","_getOptionSelectionQuery","$optionToRemove","_$select","querySelector","parentNode","removeChild","clearOptions","destroy","_getAllCheckedOptionElementsLength","querySelectorAll","_updateSelectAllOption","_useSelectAll","_$selectAllOption","setAttribute","_updateSelectedPlaceholderOptionInnerText","getAttribute","_$selectedPlaceholderOption","innerText","_optionTypeLabelPlural","checkedOptionElementsLength","_wasAllSelected","_placeholderText","_optionTypeLabelSingular","_onUpdateOptionElements","optionElements","forEach","$option","$parent","appendChild","_onClickOption","e","preventDefault","stopPropagation","isChecked","target","removeAttribute","_onClickSelectAllOption","element","selector","dataset","optionTypeLabelSingular","optionTypeLabel","optionTypeLabelPlural","placeholder","useSelectAll","classList","add","addEventListener","insertBefore","firstChild","selected","blur","selectedOptions","undefined","MultiSelectDropdownManager","init","$select","HTMLElement","_addSelectElement","msdSelectElements","reload","$el","MSDInternalUtils","getElementSelector","_elements","msdElement","TypeError","tagName","id","className","freeze","create","constructor"],"mappings":"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","file":"multi-select-dropdown.min.js","sourcesContent":["/*!\n * MultiSelectDropdown.js (0.0.1)\n *\n * Copyright (c) 2016 Brandon Sara (http://bsara.github.io)\n * Licensed under the CPOL-1.02 (https://github.com/bsara/multi-select-dropdown.js/blob/master/LICENSE.md)\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.MultiSelectDropdown = factory();\n  }\n}(this, function() {/** @private */\nvar MSDInternalUtils = {\n  /**\n   * @param  {HTMLElement} $el\n   * @return {String}\n   * @private\n   */\n  getElementSelector: function getElementSelector($el) {\n    if ($el == null || !($el instanceof HTMLElement)) {\n      throw new TypeError(\"$el cannot be `null` or `undefined` and must be an instance of `HTMLElement`!\");\n    }\n\n    var ret = $el.tagName;\n\n    if ($el.id != null) {\n      ret += ('#' + $el.id);\n    }\n    if ($el.className != null) {\n      ret += ('.' + $el.className);\n    }\n\n    return ret;\n  }\n};\n\n\nObject.freeze(MSDInternalUtils);/**\n * TODO: Add description\n *\n * @inherits {Array}\n * @constructor\n */\nfunction MSDObservableArray() {\n  var ctorArgs = arguments;\n\n  if (!(this instanceof MSDObservableArray)) {\n    return new MSDObservableArray.apply(this, ctorArgs);\n  }\n\n\n\n  /** @private @type {!Object} */ var _events;\n\n\n\n  /** @constructs MSDObservableArray */\n  ;(function() {\n    Array.apply(this, ctorArgs);\n\n\n    _events = {};\n\n\n    this.attachEvent = attachEvent;\n    this.detachEvent = detachEvent;\n\n    this.push    = push;\n    this.pop     = pop;\n    this.reverse = reverse;\n    this.shift   = shift;\n    this.sort    = sort;\n    this.splice  = splice;\n    this.unshift = unshift;\n  }).bind(this)();\n\n\n\n\n  /**\n   * TODO: Add description\n   *\n   * @param {!String}   eventName             - Name of event to which given `eventHandler` will be attached.\n   * @param {!Function} eventHandler          - The function to be called when the event represented by `eventName` occurs.\n   * @param {Object}    [eventHandlerContext] - The context to be used when calling `eventHandler` (defaults to this object).\n   */\n  function attachEvent(eventName, eventHandler, eventHandlerContext) {\n    eventHandlerContext = (eventHandlerContext || this);\n\n\n    var handlers = _events[eventName];\n\n    if (handlers == null) {\n      handlers = _events[eventName] = {};\n    }\n\n\n    var contexts = handlers[eventHandler];\n\n    if (contexts == null) {\n      contexts = handlers[eventHandler] = [];\n    }\n\n\n    var contextIndex = contexts.indexOf(eventHandlerContext);\n\n    if (~contextIndex) {\n      return;\n    }\n\n    contexts.push(eventHandlerContext);\n  }\n\n\n  /**\n   * TODO: Add description\n   *\n   * @param {!String}   eventName             - Name of event from which given `eventHandler` will be detached.\n   * @param {!Function} [eventHandler]        - The handler function attached to the event represented by the given 'eventName'.\n   * @param {Object}    [eventHandlerContext] - The context used when calling `eventHandler` (defaults to this object).\n   */\n  function detachEvent(eventName, eventHandler, eventHandlerContext) {\n    if (!(eventName in _events)) {\n      return;\n    }\n\n\n    var handlers = _events[eventName];\n    if (eventHandler == null) {\n      delete _events[eventName];\n      return;\n    }\n\n\n    var contexts = handlers[eventHandler];\n    if (eventHandlerContext == null) {\n      delete handlers[eventHandler];\n      return;\n    }\n\n\n    var contextIndex = contexts.indexOf(eventHandlerContext);\n    if (~contextIndex) {\n      contexts.splice(contextIndex, 1);\n    }\n\n\n    if (contexts.length === 0) {\n      delete handlers[eventHandler];\n    }\n    if (Object.keys(handlers).length === 0) {\n      delete _events[eventName];\n    }\n  }\n\n\n  /**\n   * @inheritDoc\n   * @fires MSDObservableArray#add\n   * @fires MSDObservableArray#update\n   */\n  function push() {\n    var ret = Array.prototype.push.apply(this, arguments);\n\n    _triggerEvent('add', _getEventArgs(arguments));\n    _triggerEvent('update', _getEventArgs(arguments));\n\n    return ret;\n  }\n\n\n  /**\n   * @inheritDoc\n   * @fires MSDObservableArray#remove\n   * @fires MSDObservableArray#update\n   */\n  function pop() {\n    var ret = Array.prototype.pop.apply(this, arguments);\n\n    _triggerEvent('remove', _getEventArgs(ret));\n    _triggerEvent('update', _getEventArgs(ret));\n\n    return ret;\n  }\n\n\n  /**\n   * @inheritDoc\n   * @fires MSDObservableArray#sort\n   * @fires MSDObservableArray#update\n   */\n  function reverse() {\n    var ret = Array.prototype.reverse.apply(this, arguments);\n\n    _triggerEvent('sort', _getEventArgs());\n    _triggerEvent('update', _getEventArgs());\n\n    return ret;\n  }\n\n\n  /**\n   * @inheritDoc\n   * @fires MSDObservableArray#remove\n   * @fires MSDObservableArray#update\n   */\n  function shift() {\n    var removed = this[0];\n\n    var ret = Array.prototype.shift.apply(this, arguments);\n\n    _triggerEvent('remove', _getEventArgs(removed));\n    _triggerEvent('update', _getEventArgs(removed));\n\n    return ret;\n  }\n\n\n  /**\n   * @inheritDoc\n   * @fires MSDObservableArray#sort\n   * @fires MSDObservableArray#update\n   */\n  function sort() {\n    var ret = Array.prototype.sort.apply(this, arguments);\n\n    _triggerEvent('sort', _getEventArgs(ret));\n    _triggerEvent('update', _getEventArgs(ret));\n\n    return ret;\n  }\n\n\n  /**\n   * @inheritDoc\n   * @fires MSDObservableArray#remove\n   * @fires MSDObservableArray#update\n   */\n  function splice() {\n    var ret = Array.prototype.splice.apply(this, arguments);\n\n    _triggerEvent('remove', _getEventArgs(ret));\n    _triggerEvent('update', _getEventArgs(ret));\n\n    return ret;\n  }\n\n\n  /**\n   * @inheritDoc\n   * @fires MSDObservableArray#add\n   * @fires MSDObservableArray#update\n   */\n  function unshift() {\n    var ret = Array.prototype.unshift.apply(this, arguments);\n\n    _triggerEvent('remove', _getEventArgs(arguments));\n    _triggerEvent('update', _getEventArgs(arguments));\n\n    return ret;\n  }\n\n\n\n  // region Private Functions\n\n  /** @private */\n  function _getEventArgs(args) {\n    var ret = [ this ];\n    return ((args == null) ? ret : ret.concat(Array.from(args)));\n  }\n\n\n  /** @private */\n  function _triggerEvent(eventName, args) {\n    setTimeout(function() {\n      if (!_events.hasOwnProperty(eventName)) {\n        return;\n      }\n\n\n      var handlers = _events[eventName];\n\n      for (var handler in Object.keys(handlers)) {\n        var contexts = handlers[handler];\n\n        for (var i = 0; i < contexts.length; i++) {\n          handler.apply(contexts[i], args);\n        }\n      }\n    }, 0);\n  }\n\n  // endregion\n}\n\n\n\nMSDObservableArray.prototype             = Object.create(Array.prototype);\nMSDObservableArray.prototype.constructor = MSDObservableArray;/**\n * @typedef {Object} MultiSelectDropdownElementOptions\n * @property {String}      [selector]            - TODO: Add description\n * @property {HTMLElement} [element]             - TODO: Add description\n * @property {Boolean}     [useSelectAll = true] - TODO: Add description\n */\n\n\n\n/**\n * TODO: Add description\n *\n * @param {MultiSelectDropdownElementOptions} options *\n * @constructor\n */\nfunction MultiSelectDropdownElement(options) {\n  if (!(this instanceof MultiSelectDropdownElement)) {\n    return new MultiSelectDropdownElement(options);\n  }\n\n\n\n  /** @private @type {!HTMLElement} */ var _$select;\n  /** @private @type {!HTMLElement} */ var _$selectAllOption;\n  /** @private @type {!HTMLElement} */ var _$selectedPlaceholderOption;\n\n  /** @private @type {!String}      */ var _placeholderText;\n  /** @private @type {!String}      */ var _optionTypeLabelSingular;\n  /** @private @type {!String}      */ var _optionTypeLabelPlural;\n\n  /** @private @type {!Boolean}     */ var _useSelectAll   = false;\n  /** @private @type {!Boolean}     */ var _wasAllSelected = false;\n\n  /** @private @type {!MSDObservableArray<!HTMLElement>} */ var _optionElements;\n\n\n\n  /** @constructs MultiSelectDropdownElement */\n  ;(function _constructor() {\n    options = (options || {});\n\n    _$select = (options.element || document.querySelector(options.selector));\n\n    _optionTypeLabelSingular = (_$select.dataset.optionTypeLabelSingular || _$select.dataset.optionTypeLabel || \"Option\");\n    _optionTypeLabelPlural   = (_$select.dataset.optionTypeLabelPlural || (_optionTypeLabelSingular + \"s\"));\n    _placeholderText         = (_$select.dataset.placeholder || (\"0 \" + _optionTypeLabelPlural + \" Selected\"));\n\n    _optionElements = new MSDObservableArray(_$select.querySelectorAll('option'));\n\n\n    if (options.useSelectAll === true) {\n      _useSelectAll = true;\n\n      _$selectAllOption = document.createElement('option');\n\n      _$selectAllOption.innerText = \"All\";\n      _$selectAllOption.classList.add('msd-select-all');\n      _$selectAllOption.addEventListener('click', _onClickOption.bind(_$selectAllOption));\n\n      _updateSelectAllOption();\n\n      _$select.insertBefore(_$selectAllOption, _$select.firstChild);\n    }\n\n\n    _$selectedPlaceholderOption = document.createElement('option');\n\n    _$selectedPlaceholderOption.selected = true;\n    _$selectedPlaceholderOption.classList.add('msd-placeholder');\n\n    _updateSelectedPlaceholderOptionInnerText();\n\n    _$select.insertBefore(_$selectedPlaceholderOption, _$select.firstChild);\n\n\n    for (var i = 0; i < _optionElements.length; i++) {\n      var $option = _optionElements[i];\n\n      $option.addEventListener('click', _onClickOption.bind($option));\n      _$selectAllOption.addEventListener('click', _onClickSelectAllOption.bind($option));\n    }\n\n\n    _$selectedPlaceholderOption.addEventListener('click', function(e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _$select.blur();\n    });\n\n\n\n    _$select.addEventListener('change', function(e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      for (var i = 0; i < _$select.selectedOptions.length; i++) {\n        _$select.selectedOptions[i].selected = false;\n      }\n\n      _$select.value = undefined;\n    });\n\n\n    _$select.addEventListener('focus', function(e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      _$select.setAttribute('multiple', 'multiple');\n      _$selectedPlaceholderOption.selected = false;\n    });\n\n\n\n    _$select.addEventListener('blur', function(e) {\n      _$selectedPlaceholderOption.selected = true;\n      _$select.removeAttribute('multiple');\n    });\n\n\n    _optionElements.attachEvent('update', _onUpdateOptionElements);\n\n\n\n    this.addOption    = addOption;\n    this.removeOption = removeOption;\n    this.clearOptions = clearOptions;\n    this.destroy      = destroy;\n  }.bind(this))();\n\n\n\n  /**\n   * TODO: Implement\n   *\n   * @param {*} optionText\n   * @param {*} [optionValue]\n   */\n  function addOption(optionText, optionValue) {\n    var $newOption = document.createElement('option');\n\n    if (optionValue != null) {\n      $newOption.value = String(optionValue);\n    }\n\n    $newOption.text = String(optionText);\n\n    _optionElements.push($newOption);\n  }\n\n\n  /**\n   * TODO: Implement\n   *\n   * @param {*} optionValue\n   * @returns {Boolean} `true` if the option was removed successfully\n   *                    or if it was not found; otherwise, returns\n   *                    `false`.\n   */\n  function removeOption(optionValue) {\n    var selectionQuery  = _getOptionSelectionQuery(optionValue);\n    var $optionToRemove = _$select.querySelector(selectionQuery);\n\n    if ($optionToRemove != null) {\n      $optionToRemove.parentNode.removeChild($optionToRemove);\n      return (_$select.querySelector(selectionQuery) == null);\n    }\n\n    return true;\n  }\n\n\n  /**\n   * TODO: Implement\n   */\n  function clearOptions() {\n    _optionElements.splice(0, _optionElements.length);\n  }\n\n\n  /**\n   * TODO: Implement\n   *\n   * @public\n   */\n  function destroy() {\n    // TODO: Implement\n  }\n\n\n\n  /** @private */\n  function _getOptionSelectionQuery(optionValue) {\n    return ((optionValue == null) ? 'option:not([value])' : ('option[value=\"' + String(optionValue) + '\"]'));\n  }\n\n\n\n  /** @private */\n  function _getAllCheckedOptionElementsLength() {\n    return _$select.querySelectorAll('option:not(.msd-select-all)[checked]').length;\n  }\n\n\n  /** @private */\n  function _updateSelectAllOption() {\n    if (_useSelectAll) {\n      if (_getAllCheckedOptionElementsLength() === _optionElements.length) {\n        _$selectAllOption.setAttribute('checked', 'checked');\n      }\n    }\n  }\n\n\n  /** @private */\n  function _updateSelectedPlaceholderOptionInnerText() {\n    if (_useSelectAll && _$selectAllOption.getAttribute('checked') != null) {\n      _$selectedPlaceholderOption.innerText = \"All \" + _optionTypeLabelPlural + \" Selected\";\n      return;\n    }\n\n    var checkedOptionElementsLength = (_wasAllSelected ? 0 : _getAllCheckedOptionElementsLength());\n\n    if (checkedOptionElementsLength === 0) {\n      _$selectedPlaceholderOption.innerText = _placeholderText;\n      return;\n    }\n    _$selectedPlaceholderOption.innerText = (checkedOptionElementsLength + \" \" + (checkedOptionElementsLength === 1 ? _optionTypeLabelSingular : _optionTypeLabelPlural) + \" Selected\");\n  }\n\n\n  // region Event Handlers\n\n  /** @private */\n  function _onUpdateOptionElements(optionElements) {\n    optionElements.forEach(function($option) {\n      var $parent = $option.parentNode;\n\n      $parent.removeChild($option);\n      $parent.appendChild($option);\n    });\n  }\n\n\n  /** @private */\n  function _onClickOption(e) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    var isChecked = (this.getAttribute('checked') == null);\n\n    if (e.target === _$selectAllOption) {\n      _wasAllSelected = !isChecked;\n    }\n\n    if (this.getAttribute('checked') == null) {\n      this.setAttribute('checked', 'checked');\n    } else {\n      this.removeAttribute('checked');\n    }\n\n    if (e.target !== _$selectAllOption) {\n      _updateSelectAllOption();\n    }\n    _updateSelectedPlaceholderOptionInnerText();\n  }\n\n\n  /** @private */\n  function _onClickSelectAllOption() {\n    if (_$selectAllOption.getAttribute('checked') == null) {\n      this.removeAttribute('checked');\n      return;\n    }\n    this.setAttribute('checked', 'checked');\n  }\n\n  // endregion\n}/**\n * TODO: Add description\n *\n * @constructor\n */\nfunction MultiSelectDropdownManager() {\n  if (!(this instanceof MultiSelectDropdownManager)) {\n    return new MultiSelectDropdownManager();\n  }\n\n\n\n  /** @private @type {!Object} */ var _elements;\n\n\n\n  /** @constructor */\n  ;(function _constructor() {\n    _elements = {};\n\n\n    // region Public Functions\n\n    this.init   = init;\n    this.reload = reload;\n\n    // endregion\n  }.bind(this))();\n\n\n\n  /**\n   * TODO : Add description\n   *\n   * @param {HTMLElement|HTMLElement[]|String} [$select] - TODO: Add description\n   * @returns {MultiSelectDropdownElement|MultiSelectDropdownElement[]} TODO: Add description\n   *\n   * @public\n   */\n  function init($select) {\n    if ($select instanceof HTMLElement) {\n      return _addSelectElement($select);\n    }\n\n    var ret               = [];\n    var msdSelectElements = (($select instanceof Array) ? $select.splice() : document.querySelectorAll(($select instanceof String) ? $select : 'select.msd'));\n\n    for (var i = 0; i < msdSelectElements.length; i++) {\n      ret.push(_addSelectElement(msdSelectElements[i]));\n    }\n\n    return ret;\n  }\n\n\n  /**\n   * TODO : Add description\n   *\n   * @param {HTMLElement|HTMLElement[]|String} [$select] - TODO: Add description\n   * @returns {MultiSelectDropdownElement|MultiSelectDropdownElement[]} TODO: Add description\n   *\n   * @public\n   */\n  function reload($el) {\n    // TODO: Implement\n  }\n\n\n  /**\n   * @param {HTMLElement} $select\n   * @returns {HTMLElement}\n   * @private\n   */\n  function _addSelectElement($select) {\n    var selector = MSDInternalUtils.getElementSelector($select);\n\n    if (!Object.hasOwnProperty(_elements, selector)) {\n      _elements[selector] = [];\n    }\n\n    var msdElement = new MultiSelectDropdownElement({ element: $select });\n    _elements[selector].push(msdElement);\n\n    return msdElement;\n  }\n}\n\nreturn {\n  MultiSelectDropdownManager: MultiSelectDropdownManager,\n  MultiSelectDropdownElement: MultiSelectDropdownElement,\n};\n\n}));\n"]}